apiVersion: v1
data:
  root: cm9vdAo=
kind: Secret
metadata:
  name: mysql-password
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: mariadb
  labels:
    mariadb: mariadb
spec:
  selector:
    mariadb: mariadb
  clusterIP: None
  ports:
  - name: mariadb
    port: 3306
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-config
  labels:
    mariadb: mariadb
data:
  start-mariadb-instance.sh: |
    [[ $(hostname) =~ -([0-9]+)$ ]] || exit 1
    server_id=${BASH_REMATCH[1]}

    cp /mnt/config-map/galera.cnf /etc/mysql/mariadb.conf.d/galera.cnf

    cat /mnt/config-map/users.sql > /docker-entrypoint-initdb.d/init.sql
    /usr/local/bin/docker-entrypoint.sh mysqld --wsrep-new-cluster --log-bin=mariadb-bin --binlog-format=ROW --server-id=$((3000 + $server_id)) --log-slave-updates=1 --gtid-strict-mode=1 --innodb-flush-method=fsync --extra-port=3307 --extra_max_connections=1 --wsrep-node-address=${DWAPI_PODIP}
    # /usr/local/bin/docker-entrypoint.sh mysqld --log-bin=mariadb-bin --binlog-format=ROW --server-id=$((3000 + $server_id)) --log-slave-updates=1 --gtid-strict-mode=1 --innodb-flush-method=fsync --extra-port=3307 --extra_max_connections=1 --wsrep-node-address=${DWAPI_PODIP}

  users.sql: |
    CREATE USER 'repl'@'127.0.0.1' IDENTIFIED BY 'repl';
    CREATE USER 'repl'@'%' IDENTIFIED BY 'repl';
    GRANT ALL ON *.* TO 'repl'@'127.0.0.1' WITH GRANT OPTION;
    GRANT ALL ON *.* TO 'repl'@'%' WITH GRANT OPTION;

    ALTER USER 'repl'@'%' 
      REQUIRE SUBJECT '/CN=server'
      AND ISSUER '/CN=root';
    
    CREATE USER 'admin'@'127.0.0.1' IDENTIFIED BY 'admin';
    CREATE USER 'admin'@'%' IDENTIFIED BY 'admin';
    GRANT ALL ON *.* TO 'admin'@'127.0.0.1' WITH GRANT OPTION;
    GRANT ALL ON *.* TO 'admin'@'%' WITH GRANT OPTION;

    ALTER USER 'admin'@'%' 
      REQUIRE SUBJECT '/CN=server'
      AND ISSUER '/CN=root';

    CREATE USER 'mysql'@'localhost' IDENTIFIED VIA unix_socket;
    GRANT RELOAD, PROCESS, LOCK TABLES, REPLICATION CLIENT ON *.* TO 'mysql'@'localhost';

    SET GLOBAL max_connections=10000;
    SET GLOBAL gtid_strict_mode=ON;

  galera.cnf: |
    [mysqld]
    plugin_load_add=auth_socket
    binlog_format=ROW
    bind-address=0.0.0.0
    default_storage_engine=innodb
    innodb_autoinc_lock_mode=2
    innodb_buffer_pool_size=1GB
    wsrep_debug=ON
    wsrep_on=ON
    wsrep_provider=/usr/lib/libgalera_smm.so
    wsrep_provider_options="gcache.size=750M; gcache.page_size=750M"
    wsrep_cluster_name="galera-cluster"
    wsrep_cluster_address="gcomm://mariadb-0.mariadb.mariadb-test.svc.cluster.local,mariadb-1.mariadb.mariadb-test.svc.cluster.local,mariadb-2.mariadb.mariadb-test.svc.cluster.local"
    wsrep_sst_method=mariabackup
    wsrep_sst_auth=mysql:
    ssl_ca=/etc/mysql/certificate/ca.cert
    ssl_cert=/etc/mysql/certificate/server.cert
    ssl_key=/etc/mysql/certificate/server.key
    wsrep_provider_options="socket.ssl_cert=/etc/mysql/certificate/server.cert;socket.ssl_key=/etc/mysql/certificate/server.key;socket.ssl_ca=/etc/mysql/certificate/ca.cert"

    plugin_load_add=file_key_management
    file_key_management_filename=/etc/encryption/keyfile.enc
    file_key_management_filekey=FILE:/etc/encryption/keyfile.key
    file_key_management_encryption_algorithm=AES_CTR
    encrypt_binlog=ON
    innodb_encrypt_tables=ON
    innodb_encrypt_log=ON
    innodb_encryption_threads=4

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb
  labels:
    mariadb: mariadb
spec:
  selector:
    matchLabels:
      mariadb: mariadb
  serviceName: mariadb
  replicas: 1
  template:
    metadata:
      labels:
        mariadb: mariadb
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: mariadb
                  operator: In
                  values:
                  - mariadb
              topologyKey: kubernetes.io/hostname
      containers:
      - name: mariadb
        image: mariadb/server:10.3
        command:
        - bash
        - /mnt/config-map/start-mariadb-instance.sh
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: root
        - name: DWAPI_PODIP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mariadb-entrypoint-vol
          mountPath: /docker-entrypoint-initdb.d
        - name: mariadb-config-vol
          mountPath: /mnt/config-map
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: mariadb-replication-secrets
          mountPath: /etc/mysql/certificate
          readOnly: true
        - name: mariadb-encryption-secrets
          mountPath: /etc/encryption
          readOnly: true
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "--host=127.0.0.1", "--port=3307"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            # Check we can execute queries over TCP (skip-networking is off).
            command: ["mysql", "-h", "127.0.0.1", "--port", "3307", "-e", "SELECT 1"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1

      restartPolicy: Always

      volumes:
      - name: mariadb-entrypoint-vol
        emptyDir: {}
      - name: mariadb-config-vol
        configMap:
          name: mariadb-config
      - name: mariadb-config-folder
        emptyDir: {}
      - name: mariadb-replication-secrets
        secret:
          secretName: mariadb-replication-secret
      - name: mariadb-encryption-secrets
        secret:
          secretName: mariadb-encryption-secret

  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        mariadb: mariadb
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 256Mi